max_obstacle_height: 1.5 # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular
footprint: [[-0.25,-0.15],[-0.25,0.15],[0.15, 0.225], [0.15, -0.225]]

map_type: voxel

obstacle_layer:
  enabled:              true
  max_obstacle_height:  1.5
  origin_z:             0.0
  z_resolution:         0.1
  z_voxels:             2
  unknown_threshold:    16
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  false    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 5
  origin_z: 0.0
  z_resolution: 0.1
  z_voxels: 2
  publish_voxel_map: false
  observation_sources:  scan bump
  scan:
    data_type: LaserScan
    sensor_frame: laser
    topic: scan
    marking: true
    clearing: true
    min_obstacle_height: 0
    max_obstacle_height: 0.15
  bump:
    data_type: LaserScan
    sensor_frame: camera_depth_frame
    topic: scan_realsense
    marking: true
    clearing: true
    min_obstacle_height: 0.0
    max_obstacle_height: 1.5
#  bump:
#    data_type: PointCloud2
#    sensor_frame: camera_depth_optical_frame
#    topic: camera/depth/color/points
#    marking: true
#    clearing: true
#    min_obstacle_height: 0.0
#    max_obstacle_height: 1.5
  # for debugging only, let's you see the entire voxel grid

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5 # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     2.5  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true
